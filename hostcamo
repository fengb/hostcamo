#!/bin/bash

target_ip=0.1.2.3
cache_dir=

whitelist=(
  localhost.localdomain
  local
  localhost
  broadcasthost
  0.0.0.0
)

# Ripped this list from Pi-Hole:
# https://raw.githubusercontent.com/pi-hole/pi-hole/master/adlists.default
hostfiles=(
  'https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts'
  'https://mirror1.malwaredomains.com/files/justdomains'
  'http://sysctl.org/cameleon/hosts'
  'https://zeustracker.abuse.ch/blocklist.php?download=domainblocklist'
  'https://s3.amazonaws.com/lists.disconnect.me/simple_tracking.txt'
  'https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt'
  'https://hosts-file.net/ad_servers.txt'
)

function panic {
  echo "$@" >&2
  exit 1
}

function init_opts {
  while getopts ":c:" opt "$@"; do
    case "$opt" in
      c) cache_dir="${OPTARG}";;
      *) panic "Err: $opt";;
    esac
  done
}

function as_filename {
  <<<"$1" sed -e "s~^https*://~~" -e "s:/:--:g"
}

function strip {
  regex_ip='[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'
  sed -E -e "s/^($regex_ip)?[[:space:]]+//g" -e 's/[[:space:]]*(#.*)?$//g'
}

function filter {
  regex_whitelist="($(sed -e 's#\.#\\.#g' -e 's# #|#g' <<<"${whitelist[@]}"))"
  sed -E -e "/^$regex_whitelist$/d" -e "/^[-._a-zA-Z0-9]+$/!d"
}

function maybe_cache {
  url="$1"
  if [ -z "$cache_dir" ]; then
    cat
  else
    mkdir -p "$cache_dir"
    tee "$cache_dir/$(as_filename "$url")"
  fi
}

function process_all {
  for url in "${hostfiles[@]}"; do
    curl -s "$url" | strip | filter | sort -u | maybe_cache "$url" &
  done
  wait
}

if [ "${BASH_SOURCE[0]}" = "$0" ]; then
  init_opts "$@"
  process_all | sort -u | sed -e "s/^/$target_ip /"
fi
