#!/bin/bash

target_ip=255.255.255.255
cache_dir=

ignore_hosts=(
  localhost.localdomain
  local
  localhost
  broadcasthost
  0.0.0.0
)

# Ripped this list from Pi-Hole:
# https://raw.githubusercontent.com/pi-hole/pi-hole/557372b3122c6ba27c63e6908ea34f3a64829fb8/adlists.default
hostfiles=(
  'https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts'
  'https://mirror1.malwaredomains.com/files/justdomains'
  'http://sysctl.org/cameleon/hosts'
  'https://zeustracker.abuse.ch/blocklist.php?download=domainblocklist'
  'https://s3.amazonaws.com/lists.disconnect.me/simple_tracking.txt'
  'https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt'
  'https://hosts-file.net/ad_servers.txt'
)

function panic {
  echo "$@" >&2
  exit 1
}

function init_opts {
  while getopts ":c:" opt "$@"; do
    case "$opt" in
      c) cache_dir="${OPTARG}";;
      *) panic "Err: $opt";;
    esac
  done
}

function as_filename {
  no_prefix="${1#http*://}"
  echo "${no_prefix//\//--}"
}

function extract_domains {
  re_ip='[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'
  re_domain='[-.a-z0-9]+\.[a-z]{2,}'
  sed -E -n -e "s/^($re_ip)?([[:space:]]+)?($re_domain).*$/\3/p"
}

function join_by {
  local IFS="$1"
  shift
  echo "$*"
}

function reject {
  grep -F -v -x -f <(join_by $'\n' "$@")
}

function maybe_cache {
  if [ -z "$cache_dir" ]; then
    cat
  else
    mkdir -p "$cache_dir"
    tee "$cache_dir/$(as_filename "$1")"
  fi
}

function process_all {
  for url in "$@"; do
    curl --progress-bar -L "$url" | extract_domains | reject "${ignore_hosts[@]}" | maybe_cache "$url" &
  done
  wait
}

if [ "${BASH_SOURCE[0]}" = "$0" ]; then
  init_opts "$@"
  process_all "${hostfiles[@]}" | sort -u | sed -e "/^$/d" -e "s/^/$target_ip /"
fi
